.\" Automatically generated by Pandoc 3.1.11.1
.\"
.TH "AVIFDEC" "1" "2022\-04\-30" "libavif 1.2.0" "General Commands Manual"
.SH NAME
avifdec \- decompress an AVIF file to an image file
.SH SYNOPSIS
\f[B]avifdec\f[R] [\f[I]options\f[R]] \f[I]input.avif\f[R]
\f[I]output.\f[R][\f[I]jpg\f[R]|\f[I]jpeg\f[R]|\f[I]png\f[R]|\f[I]y4m\f[R]]
.PP
\f[B]avifdec\f[R] \f[B]\-\-info\f[R] \f[I]input.avif\f[R]
.SH DESCRIPTION
\f[B]avifdec\f[R] decompresses an AVIF file to an image file.
Output format can be either JPEG, PNG or YUV4MPEG2 (Y4M).
.SH OPTIONS
.TP
\f[B]\-h\f[R], \f[B]\-\-help\f[R]
Show syntax help.
.TP
\f[B]\-V\f[R], \f[B]\-\-version\f[R]
Show the version number.
.TP
\f[B]\-j\f[R], \f[B]\-\-jobs\f[R] \f[I]J\f[R]
Number of jobs (worker threads), or `all' to potentially use as many
cores as possible.
(Default: all).
.TP
\f[B]\-c\f[R], \f[B]\-\-codec\f[R] \f[I]C\f[R]
Codec to use.
.RS
.PP
Possible values depend on the codecs enabled at build time (see
\f[B]\-\-help\f[R] or \f[B]\-\-version\f[R] for the available codecs).
Default is auto\-selected from the available codecs.
.TP
Possible values are:
.IP \[bu] 2
\f[B]aom\f[R]
.IP \[bu] 2
\f[B]dav1d\f[R]
.IP \[bu] 2
\f[B]libgav1\f[R]
.RE
.TP
\f[B]\-d\f[R], \f[B]\-\-depth\f[R] \f[I]D\f[R]
Output depth, either 8 or 16.
(PNG only; For y4m, depth is retained, and JPEG is always 8bpc).
.TP
\f[B]\-q\f[R], \f[B]\-\-quality\f[R] \f[I]Q\f[R]
Output quality in 0..100.
(JPEG only, default: 90).
.TP
\f[B]\-\-png\-compress\f[R] \f[I]L\f[R]
PNG compression level in 0..9 (PNG only; 0=none, 9=max).
Defaults to libpng\[cq]s builtin default.
.TP
\f[B]\-u\f[R], \f[B]\-\-upsampling\f[R] \f[I]U\f[R]
Chroma upsampling (for 420/422).
One of `automatic' (default), `fastest', `best', `nearest', or
`bilinear'.
.TP
\f[B]\-r\f[R], \f[B]\-\-raw\-color\f[R]
Output raw RGB values instead of multiplying by alpha when saving to
opaque formats (JPEG only; not applicable to y4m).
.TP
\f[B]\-\-index\f[R] \f[I]I\f[R]
When decoding an image sequence or progressive image, specify which
frame index to decode (Default: 0).
.TP
\f[B]\-\-progressive\f[R]
Enable progressive AVIF processing.
If a progressive image is encountered and \-\-progressive is passed,
avifdec will use \-\-index to choose which layer to decode (in
progressive order).
.TP
\f[B]\-\-no\-strict\f[R]
Disable strict decoding, which disables strict validation checks and
errors.
.TP
\f[B]\-i\f[R], \f[B]\-\-info\f[R]
Decode all frames and display all image information instead of saving to
disk.
.TP
\f[B]\-\-icc\f[R] \f[I]FILENAME\f[R]
Provide an ICC profile payload (implies \-\-ignore\-icc).
.TP
\f[B]\-\-ignore\-icc\f[R]
If the input file contains an embedded ICC profile, ignore it (no\-op if
absent).
.TP
\f[B]\-\-size\-limit\f[R] \f[I]C\f[R]
Maximum image size (in total pixels) that should be tolerated.
(Default: 268435456).
.TP
\f[B]\-\-dimension\-limit\f[R] \f[I]C\f[R]
Maximum image dimension (width or height) that should be tolerated.
Set to 0 to ignore.
(Default: 32768).
.TP
\f[B]\-\-\f[R]
Signal the end of options.
Everything after this is interpreted as file names.
.SH EXAMPLES
.TP
Decompress an AVIF file to a PNG file:
$ \f[B]avifdec input.avif output.png\f[R]
.SH REPORTING BUGS
.TP
Bugs can be reported on GitHub at:
\c
.UR https://github.com/AOMediaCodec/libavif/issues
.UE \c
.SH SEE ALSO
\f[B]avifenc\f[R](1)
