From: Wan-Teh Chang <wtc@google.com>
Date: Fri, 18 Apr 2025 15:29:20 -0700
Subject: Declare *RowBytes as size_t in avifImageRGBToYUV()
Origin: https://github.com/AOMediaCodec/libavif/commit/64d956ed5a602f78cebf29da023280944ee92efd
Bug: https://github.com/AOMediaCodec/libavif/pull/2769
Bug-Debian: https://bugs.debian.org/1105883
Bug-Debian-Security: https://security-tracker.debian.org/tracker/CVE-2025-48175

Declare rgbRowBytes, yRowBytes, uRowBytes, and vRowBytes as size_t in
avifImageRGBToYUV(). This causes multiplications with these variables to
be performed in size_t (which may be 64 bits) instead of uint32_t. For
very large image width and height, these multiplications may overflow
uint32_t.

Acknowledgements: DanisJiang
https://github.com/AOMediaCodec/libavif/security/advisories/GHSA-762c-2538-h844
---
 src/reformat.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

--- a/src/reformat.c
+++ b/src/reformat.c
@@ -259,14 +259,14 @@ avifResult avifImageRGBToYUV(avifImage *
         const uint32_t offsetBytesG = state.rgb.offsetBytesG;
         const uint32_t offsetBytesB = state.rgb.offsetBytesB;
         const uint32_t offsetBytesA = state.rgb.offsetBytesA;
-        const uint32_t rgbRowBytes = rgb->rowBytes;
+        const size_t rgbRowBytes = rgb->rowBytes;
         const float rgbMaxChannelF = state.rgb.maxChannelF;
         uint8_t * yPlane = image->yuvPlanes[AVIF_CHAN_Y];
         uint8_t * uPlane = image->yuvPlanes[AVIF_CHAN_U];
         uint8_t * vPlane = image->yuvPlanes[AVIF_CHAN_V];
-        const uint32_t yRowBytes = image->yuvRowBytes[AVIF_CHAN_Y];
-        const uint32_t uRowBytes = image->yuvRowBytes[AVIF_CHAN_U];
-        const uint32_t vRowBytes = image->yuvRowBytes[AVIF_CHAN_V];
+        const size_t yRowBytes = image->yuvRowBytes[AVIF_CHAN_Y];
+        const size_t uRowBytes = image->yuvRowBytes[AVIF_CHAN_U];
+        const size_t vRowBytes = image->yuvRowBytes[AVIF_CHAN_V];
         for (uint32_t outerJ = 0; outerJ < image->height; outerJ += 2) {
             for (uint32_t outerI = 0; outerI < image->width; outerI += 2) {
                 int blockW = 2, blockH = 2;
